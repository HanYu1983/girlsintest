// Generated by CoffeeScript 1.8.0
(function() {
  var apipath, filepath, pkg, query, querySignal, _base;

  if (app.tool == null) {
    app.tool = {};
  }

  if ((_base = app.tool).serverapi == null) {
    _base.serverapi = {};
  }

  pkg = app.tool.serverapi;

  apipath = 'goapp/Func';

  pkg.QueryStreetModel = 'QueryStreetModel';

  pkg.CreateStreetModel = 'UpdateStreetModel';

  pkg.UpdateStreetModel = 'UpdateStreetModel';

  pkg.AddPhotoToStreetModel = 'AddPhotoToStreetModel';

  pkg.QueryPhotoWithStreetModel = 'QueryPhotoWithStreetModel';

  pkg.DeletePhotoWithStreetModel = 'DeletePhotoWithStreetModel';

  pkg.ServeFile = 'ServeFile';

  filepath = function(host) {
    return function(path) {
      return host + "/" + apipath + "?cmd=ServeFile&FilePath=" + path;
    };
  };

  query = function(host) {
    return function(cmd, data) {
      var option, promise;
      data.cmd = cmd;
      promise = jQuery.Deferred();
      option = cmd === pkg.ServeFile ? {
        type: 'get',
        data: data,
        dataType: 'json'
      } : {
        type: 'post',
        data: data
      };
      $.when($.ajax(host + "/" + apipath, option)).done(function(data) {
        return promise.resolve(data);
      }).fail(function(err) {
        return promise.reject(err);
      });
      return promise;
    };
  };

  querySignal = function(host) {
    return function(cmd, data) {
      return Bacon.fromPromise(query(host, cmd, data));
    };
  };

  pkg.query = query;

  pkg.querySignal = querySignal;

  pkg.filepath = filepath;

}).call(this);

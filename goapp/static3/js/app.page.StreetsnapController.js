// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.app.page.StreetsnapController = (function(_super) {
    __extends(StreetsnapController, _super);

    function StreetsnapController() {
      return StreetsnapController.__super__.constructor.apply(this, arguments);
    }

    StreetsnapController.prototype.addListener = function() {
      return StreetsnapController.__super__.addListener.call(this);
    };

    StreetsnapController.prototype.open = function() {
      return StreetsnapController.__super__.open.call(this);
    };

    StreetsnapController.prototype.close = function() {
      return StreetsnapController.__super__.close.call(this);
    };

    StreetsnapController.prototype.applyTemplate = function(tmpl, callback) {
      this.queryData();
      return callback(tmpl.tmpl({
        name: 'vic',
        date: '2014-12-2',
        styleUrl: 'images/streetSnap/test2.jpg',
        sideList: [
          {
            id: '01',
            url: 'images/streetSnap/test1.jpg'
          }, {
            id: '02',
            url: 'images/streetSnap/test1.jpg'
          }
        ],
        bottomList: [
          {
            id: '01',
            url: 'images/streetSnap/test1.jpg'
          }, {
            id: '02',
            url: 'images/streetSnap/test1.jpg'
          }
        ],
        modelDetail: '名字　　　　　　　　　: Alice</br>喜歡的品牌　　　　　　: Burberry</br>\n喜歡的穿衣風格　　　　: American Style</br>\n喜歡的雜誌　　　　　　: Vogue, ELLE</br>\n最近喜歡看的電視節目　: 不是政論節目都好',
        talk: '對於時尚,我覺得最重要的是穿出自己的風格, 而不是一昧跟隨著流行。但當然也需要觀察最近的趨勢.也許有朝一日也可以成為部落格',
        protalk: '於東區街頭看到這個小女孩, 桃紅T-Shirt加上深藍帽T的搭配，呈現出初秋可愛的氣息'
      }));
    };

    StreetsnapController.prototype.queryData = function() {
      var fetchEndProcess, fetchModelData, fetchPhotoData, query;
      query = app.tool.serverapi.query("http://localhost:8080/");
      fetchModelData = function(callback) {
        return query(app.tool.serverapi.QueryStreetModel, {}).done(function(data) {
          return callback(null, data);
        }).fail(function(err) {
          return callback(err);
        });
      };
      fetchPhotoData = function(modelData, callback) {
        var models;
        models = modelData.Info;
        if (models.length === 0) {
          callback(null, []);
        }
        return async.map(modelData.Info, function(model, callback) {
          return query(app.tool.serverapi.QueryPhotoWithStreetModel, {
            StreetModelKey: model.Key
          }).done(function(photoData) {
            return callback(null, photoData.Info);
          }).fail(function(err) {
            return callback(err);
          });
        }, function(err, results) {
          return callback(err, [modelData, results]);
        });
      };
      fetchEndProcess = (function(_this) {
        return function(err, results) {
          if (err != null) {
            return _this.onQueryError(err);
          } else {
            return _this.onDataFetched.apply(_this, results);
          }
        };
      })(this);
      return async.waterfall([fetchModelData, fetchPhotoData], fetchEndProcess);
    };

    StreetsnapController.prototype.onQueryError = function(err) {
      return console.log(err);
    };

    StreetsnapController.prototype.onDataFetched = function(modelData, photoData) {
      console.log(modelData);
      return console.log(photoData);
    };

    return StreetsnapController;

  })(vic.mvc.Controller);

}).call(this);
